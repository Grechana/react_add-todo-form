{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","userInfo","todoInfoClasses","completed","title","TodoList","todos","map","id","username","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","newtodoList","setNewTodoList","noTitle","setNoTitle","noUser","setNoUser","action","method","onSubmit","event","preventDefault","trim","maxId","Math","max","newTodo","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEhDC,EAEED,EAFFC,MACAC,EACEF,EADFE,KAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGC,KCRMG,EAAoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5CC,EAAWD,EAAKN,MAAQ,cAAC,EAAD,CAAUA,KAAMM,EAAKN,OAC7CQ,EAAe,mBAAeF,EAAKG,UAAY,sBAAwB,IAE7E,OACE,0BAASN,UAAWK,EAApB,UACE,oBAAIL,UAAU,kBAAd,SAAiCG,EAAKI,QACrCH,MCNMI,EAAuC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClD,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKQ,UCPX,GACb,CACEA,GAAI,EACJZ,KAAM,gBACNa,SAAU,OACVd,MAAO,qBAET,CACEa,GAAI,EACJZ,KAAM,eACNa,SAAU,YACVd,MAAO,qBAET,CACEa,GAAI,EACJZ,KAAM,mBACNa,SAAU,WACVd,MAAO,sBAET,CACEa,GAAI,EACJZ,KAAM,mBACNa,SAAU,WACVd,MAAO,6BAET,CACEa,GAAI,EACJZ,KAAM,mBACNa,SAAU,SACVd,MAAO,4BAET,CACEa,GAAI,EACJZ,KAAM,uBACNa,SAAU,mBACVd,MAAO,2BAET,CACEa,GAAI,EACJZ,KAAM,kBACNa,SAAU,eACVd,MAAO,0BAET,CACEa,GAAI,EACJZ,KAAM,2BACNa,SAAU,gBACVd,MAAO,wBAET,CACEa,GAAI,EACJZ,KAAM,kBACNa,SAAU,WACVd,MAAO,2BAET,CACEa,GAAI,GACJZ,KAAM,qBACNa,SAAU,iBACVd,MAAO,2BCnDX,SAASe,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAnB,GAAI,OAAIA,EAAKc,KAAOG,MAEvC,KAGf,IAAML,ECdE,CACb,CACEE,GAAI,EACJJ,MAAO,qBACPD,WAAW,EACXQ,OAAQ,GAEV,CACEH,GAAI,GACJJ,MAAO,kBACPD,WAAW,EACXQ,OAAQ,GAEV,CACEH,GAAI,EACJJ,MAAO,qCACPD,WAAW,EACXQ,OAAQ,IDHiCJ,KAAI,SAAAP,GAAI,kCAChDA,GADgD,IAEnDN,KAAMgB,EAAQV,EAAKW,aAGRG,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA4BD,mBAAS,GAArC,mBAAOJ,EAAP,KAAeM,EAAf,KACA,EAAsCF,mBAAST,GAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAuCA,OACE,sBAAK1B,UAAU,MAAf,UACE,+CAEA,uBACE2B,OAAO,aACPC,OAAO,OACPC,SAlCgB,SAACC,GACrBA,EAAMC,iBACDjB,GACHY,GAAU,GAGPnB,EAAMyB,QACTR,GAAW,GAGb,IAAMS,EAAQC,KAAKC,IAAL,MAAAD,KAAI,YAAQb,EAAYX,KAAI,SAACP,GAAD,OAAeA,EAAKQ,QAE9D,GAAIG,GAAUP,EAAO,CACnB,IAAM6B,EAAgB,CACpBzB,GAAIsB,EAAQ,EACZ1B,QACAD,WAAW,EACXQ,SACAjB,KAAMgB,EAAQC,IAGhBQ,EAAe,GAAD,mBAAKD,GAAL,CAAkBe,KAChCjB,EAAS,IACTC,EAAU,KAQV,UAKE,sBAAKpB,UAAU,QAAf,UACE,uBAAOqC,QAAQ,aAAf,yBAGA,uBACEC,KAAK,OACL3B,GAAG,aACH,UAAQ,aACR4B,MAAOhC,EACPiC,YAAY,gBACZC,SAxDgB,SAACX,GACzBX,EAASW,EAAMY,OAAOH,OACtBf,GAAW,MAwDJD,GAAW,sBAAMvB,UAAU,QAAhB,qCAGd,sBAAKA,UAAU,QAAf,UACE,uBAAOqC,QAAQ,aAAf,wBAGA,yBACE,UAAQ,aACR1B,GAAG,aACHZ,KAAK,OACLwC,MAAOzB,GAAU,IACjB2B,SAjEe,SAACX,GACxBV,GAAWU,EAAMY,OAAOH,OACxBb,GAAU,IA0DJ,UAOE,wBAAQa,MAAM,IAAII,UAAQ,EAA1B,2BAGC5B,EAAgBL,KAAI,SAAAb,GAAI,OACvB,wBAAsB0C,MAAO1C,EAAKc,GAAlC,SACGd,EAAKE,MADKF,EAAKc,UAMrBc,GAAU,sBAAMzB,UAAU,QAAhB,qCAGb,wBAAQsC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU7B,MAAOY,QEjHvBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.95862f34.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\nexport const UserInfo:React.FC<{ user: User }> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo:React.FC<{ todo: Todo }> = ({ todo }) => {\n  const userInfo = todo.user && <UserInfo user={todo.user} />;\n  const todoInfoClasses = `TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`;\n\n  return (\n    <article className={todoInfoClasses}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {userInfo}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList:React.FC<{ todos: Todo[] }> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [newtodoList, setNewTodoList] = useState(todos);\n  const [noTitle, setNoTitle] = useState(false);\n  const [noUser, setNoUser] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setNoTitle(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setNoUser(false);\n  };\n\n  const handleAddTodo = (event:FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!userId) {\n      setNoUser(true);\n    }\n\n    if (!title.trim()) {\n      setNoTitle(true);\n    }\n\n    const maxId = Math.max(...newtodoList.map((todo:Todo) => todo.id));\n\n    if (userId && title) {\n      const newTodo: Todo = {\n        id: maxId + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setNewTodoList([...newtodoList, newTodo]);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title: &nbsp;\n          </label>\n          <input\n            type=\"text\"\n            id=\"titleInput\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n          {noTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User: &nbsp;\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"user\"\n            value={userId || '0'}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {noUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newtodoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}